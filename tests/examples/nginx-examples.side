{
  "id": "b4675761-fdf4-4799-a7b0-989dd0f481f0",
  "name": "nginx-examples",
  "url": "http://nginx:80",
  "tests": [{
    "id": "d7a82bde-3223-4dd7-8aa1-7dc5c0589f35",
    "name": "input type text",
    "commands": [{
      "id": "7f06e165-5c7a-4293-ae46-5d2ce3fdf963",
      "comment": "",
      "command": "open",
      "target": "/value.html",
      "targets": [],
      "value": ""
    }, {
      "id": "acd85847-518a-47e9-9df0-216e7f20441b",
      "comment": "",
      "command": "assertValue",
      "target": "id=v",
      "targets": [],
      "value": "test"
    }, {
      "id": "d1726a34-2cb2-4683-b039-ca721202c491",
      "comment": "",
      "command": "type",
      "target": "id=v",
      "targets": [],
      "value": "selenium"
    }, {
      "id": "7b8267a4-2c0c-475f-8da0-7f51655ace46",
      "comment": "",
      "command": "assertValue",
      "target": "id=v",
      "targets": [],
      "value": "selenium"
    }, {
      "id": "3d3b652f-fc68-4ecd-a129-3178fa61e0cd",
      "comment": "",
      "command": "sendKeys",
      "target": "id=v",
      "targets": [],
      "value": "-ide"
    }, {
      "id": "0e5e4975-f5f3-401a-95ae-ddfdba5aab55",
      "comment": "",
      "command": "assertValue",
      "target": "id=v",
      "targets": [],
      "value": "selenium-ide"
    }]
  }, {
    "id": "22950f29-fb71-417f-9412-8c07466d0501",
    "name": "input type checkbox",
    "commands": [{
      "id": "d54b8b1b-39e4-459f-83e2-5893d0b4c467",
      "comment": "",
      "command": "open",
      "target": "/check.html",
      "targets": [],
      "value": ""
    }, {
      "id": "ceef13ad-bf8b-4303-85b1-209dd761f543",
      "comment": "",
      "command": "assertChecked",
      "target": "id=t",
      "targets": [],
      "value": ""
    }, {
      "id": "3d6fa7ba-7e52-473c-a254-ff0a5d5a3219",
      "comment": "",
      "command": "assertNotChecked",
      "target": "id=f",
      "targets": [],
      "value": ""
    }, {
      "id": "67b80be4-200f-4f36-a1ba-a9e6fd95f00f",
      "comment": "",
      "command": "click",
      "target": "id=f",
      "targets": [],
      "value": ""
    }, {
      "id": "1abcfc35-e013-44a5-909f-977315cc83eb",
      "comment": "",
      "command": "assertChecked",
      "target": "id=f",
      "targets": [],
      "value": ""
    }]
  }, {
    "id": "1f270ca5-5a7c-4067-8f67-b4fc0dcea00b",
    "name": "input editable",
    "commands": [{
      "id": "87af5840-26f1-4a35-8814-3d4e05c913a9",
      "comment": "",
      "command": "open",
      "target": "/editable.html",
      "targets": [],
      "value": ""
    }, {
      "id": "80844f39-aebb-436a-9fd8-e0bebb242b01",
      "comment": "",
      "command": "assertNotEditable",
      "target": "id=d",
      "targets": [],
      "value": ""
    }, {
      "id": "d8d4e11e-b775-4348-91d6-d48f92b29ae4",
      "comment": "",
      "command": "assertNotEditable",
      "target": "id=r",
      "targets": [],
      "value": ""
    }, {
      "id": "a0ebea3d-0705-474f-b4b3-ffbe68fea6ac",
      "comment": "",
      "command": "assertEditable",
      "target": "id=e",
      "targets": [],
      "value": ""
    }, {
      "id": "6359e1c6-ba79-4d09-a08d-5ac664cbf9b9",
      "comment": "",
      "command": "type",
      "target": "id=e",
      "targets": [],
      "value": "selenium"
    }, {
      "id": "8a202701-15f3-43c1-ab92-faee105450af",
      "comment": "",
      "command": "assertValue",
      "target": "id=e",
      "targets": [],
      "value": "selenium"
    }]
  }, {
    "id": "f641e948-8521-408c-9fde-ba85dad4bc5e",
    "name": "select",
    "commands": [{
      "id": "af7da713-a1cd-4a96-99b8-4d17a76a291e",
      "comment": "",
      "command": "open",
      "target": "/select.html",
      "targets": [],
      "value": ""
    }, {
      "id": "652617a6-f8d7-4e1f-ac38-e9c8f0730ea2",
      "comment": "",
      "command": "assertSelectedValue",
      "target": "id=select",
      "targets": [],
      "value": "1"
    }, {
      "id": "a3ace3e1-1cb2-49a9-9ef3-4797ac87e7b9",
      "comment": "",
      "command": "select",
      "target": "id=select",
      "targets": [],
      "value": "label=Two"
    }, {
      "id": "d774634a-4626-4e8a-9064-4a51a760760c",
      "comment": "",
      "command": "assertSelectedValue",
      "target": "id=select",
      "targets": [],
      "value": "2"
    }]
  }, {
    "id": "4aa9c6dc-bb9e-4765-9359-e9a66acefda8",
    "name": "wait implicit",
    "commands": [{
      "id": "bb553702-1f4e-42f7-b117-e6c65b3a681f",
      "comment": "",
      "command": "open",
      "target": "/wait/implicit.html",
      "targets": [],
      "value": ""
    }, {
      "id": "ad5106ad-f0a7-41c8-9c4d-1f8424827408",
      "comment": "",
      "command": "assertElementNotPresent",
      "target": "id=t",
      "targets": [],
      "value": ""
    }, {
      "id": "7c257117-0784-4944-a436-606c0d437454",
      "comment": "",
      "command": "click",
      "target": "id=b",
      "targets": [],
      "value": ""
    }, {
      "id": "570a04dd-14c0-4086-97a6-f98fb4d11727",
      "comment": "",
      "command": "assertText",
      "target": "id=t",
      "targets": [],
      "value": "selenium"
    }]
  }, {
    "id": "c720eabf-0c0a-4f6e-8aa6-9daca298d726",
    "name": "popup alert",
    "commands": [{
      "id": "9fb2e845-2de7-4175-a9ae-a1dce1745bd2",
      "comment": "",
      "command": "open",
      "target": "/popup/alert.html",
      "targets": [],
      "value": ""
    }, {
      "id": "c50da9f3-3d2a-435b-a68e-21312ab9a8d0",
      "comment": "",
      "command": "click",
      "target": "id=b",
      "targets": [],
      "value": ""
    }, {
      "id": "8b5457ca-b458-40e4-a572-db2c4d1f46c6",
      "comment": "",
      "command": "assertAlert",
      "target": "test",
      "targets": [],
      "value": ""
    }, {
      "id": "a0feb0c9-a451-4efe-9e23-b2c65501a14e",
      "comment": "",
      "command": "assertTitle",
      "target": "changed",
      "targets": [],
      "value": ""
    }]
  }, {
    "id": "4631cfbd-700c-42ea-add5-12e5a33d845e",
    "name": "popup confirmation",
    "commands": [{
      "id": "7d105ce7-265a-4097-abe5-cbce6400570b",
      "comment": "",
      "command": "open",
      "target": "/popup/confirm.html",
      "targets": [],
      "value": ""
    }, {
      "id": "09404dcc-c80b-400d-862c-b91b651a47cc",
      "comment": "",
      "command": "chooseOkOnNextConfirmation",
      "target": "",
      "targets": [],
      "value": ""
    }, {
      "id": "2c3433c6-cc1f-480e-affe-788e1ad3638a",
      "comment": "",
      "command": "clickAt",
      "target": "id=b",
      "targets": [],
      "value": "41,8"
    }, {
      "id": "9479392b-b9ca-4283-b904-9d3f42390e99",
      "comment": "",
      "command": "assertConfirmation",
      "target": "test",
      "targets": [],
      "value": ""
    }, {
      "id": "62aba19e-1df8-453a-adf5-5b66d19efcc1",
      "comment": "",
      "command": "webdriverChooseOkOnNextConfirmation",
      "target": "",
      "targets": [],
      "value": ""
    }, {
      "id": "021f65ee-b77f-45e4-a171-fd645c00679d",
      "comment": "",
      "command": "assertTitle",
      "target": "ok",
      "targets": [],
      "value": ""
    }, {
      "id": "45d8fa74-3f15-4ec5-b111-d20f79767607",
      "comment": "",
      "command": "chooseCancelOnNextConfirmation",
      "target": "",
      "targets": [],
      "value": ""
    }, {
      "id": "9ebd3e81-6241-45b8-b96b-e08bd227cd75",
      "comment": "",
      "command": "clickAt",
      "target": "id=b",
      "targets": [],
      "value": "39,8"
    }, {
      "id": "f579132a-9d10-4dc9-8c8e-f411c2aa215f",
      "comment": "",
      "command": "assertConfirmation",
      "target": "test",
      "targets": [],
      "value": ""
    }, {
      "id": "f60f098f-ef36-4f35-9947-9dfc1d713d9f",
      "comment": "",
      "command": "webdriverChooseCancelOnNextConfirmation",
      "target": "",
      "targets": [],
      "value": ""
    }, {
      "id": "78d1af54-c8f4-4a7f-93d3-ab6258beccd1",
      "comment": "",
      "command": "assertTitle",
      "target": "cancel",
      "targets": [],
      "value": ""
    }]
  }, {
    "id": "0d50f757-df05-4129-ab8b-ff52084c704d",
    "name": "popup prompt",
    "commands": [{
      "id": "52dcfd81-4e93-4597-9e53-3bbfd3b77eb6",
      "comment": "",
      "command": "open",
      "target": "/popup/prompt.html",
      "targets": [],
      "value": ""
    }, {
      "id": "5f0595bf-4cad-4d04-b2c5-435369e50787",
      "comment": "",
      "command": "chooseCancelOnNextPrompt",
      "target": "",
      "targets": [],
      "value": ""
    }, {
      "id": "3c30ec02-c60e-423a-a5db-c5f7f01eb54c",
      "comment": "",
      "command": "clickAt",
      "target": "id=b",
      "targets": [],
      "value": "49,11"
    }, {
      "id": "a35afcb8-d4e5-4bd7-a1c2-327ef701a493",
      "comment": "",
      "command": "assertPrompt",
      "target": "test",
      "targets": [],
      "value": ""
    }, {
      "id": "14904a55-9a9b-4982-8763-49563c849493",
      "comment": "",
      "command": "webdriverChooseCancelOnNextPrompt",
      "target": "",
      "targets": [],
      "value": ""
    }, {
      "id": "f0de301e-8493-4be9-a52c-555018224341",
      "comment": "",
      "command": "assertTitle",
      "target": "cancel",
      "targets": [],
      "value": ""
    }, {
      "id": "cd599d33-b478-4e1f-a3b8-44957287a10d",
      "comment": "",
      "command": "answerOnNextPrompt",
      "target": "",
      "targets": [],
      "value": ""
    }, {
      "id": "32889f1a-408d-42ad-995b-27b6baa14df4",
      "comment": "",
      "command": "clickAt",
      "target": "id=b",
      "targets": [],
      "value": "51,10"
    }, {
      "id": "a9b88901-282c-4616-b95a-29f4a4fe494c",
      "comment": "",
      "command": "assertPrompt",
      "target": "test",
      "targets": [],
      "value": ""
    }, {
      "id": "879ac9d9-32da-4ae3-a124-75c09aae52b3",
      "comment": "",
      "command": "webdriverAnswerOnNextPrompt",
      "target": "",
      "targets": [],
      "value": ""
    }, {
      "id": "33ce8553-db42-4a5b-96e8-a16eed3a6183",
      "comment": "",
      "command": "assertTitle",
      "target": "empty",
      "targets": [],
      "value": ""
    }, {
      "id": "bf5e667f-070e-446b-8954-0b1659d4122d",
      "comment": "",
      "command": "answerOnNextPrompt",
      "target": "selenium",
      "targets": [],
      "value": ""
    }, {
      "id": "910e4b13-f5cd-4dcc-84d0-2f79843ddfb7",
      "comment": "",
      "command": "clickAt",
      "target": "id=b",
      "targets": [],
      "value": "35,11"
    }, {
      "id": "21460ab3-e460-4041-a291-dc7348ed8889",
      "comment": "",
      "command": "assertPrompt",
      "target": "test",
      "targets": [],
      "value": ""
    }, {
      "id": "f6ccc7a8-e6b1-43c4-b361-d1b7432ea83e",
      "comment": "",
      "command": "webdriverAnswerOnNextPrompt",
      "target": "selenium",
      "targets": [],
      "value": ""
    }, {
      "id": "dd7c6ae2-bb8d-43f2-92ce-6aeed1bc08f7",
      "comment": "",
      "command": "assertTitle",
      "target": "selenium",
      "targets": [],
      "value": ""
    }]
  }],
  "suites": [{
    "id": "33487441-d469-4fe2-8f5e-893104aa2316",
    "name": "inputs",
    "persistSession": false,
    "parallel": false,
    "timeout": 300,
    "tests": ["1f270ca5-5a7c-4067-8f67-b4fc0dcea00b", "22950f29-fb71-417f-9412-8c07466d0501", "d7a82bde-3223-4dd7-8aa1-7dc5c0589f35", "f641e948-8521-408c-9fde-ba85dad4bc5e"]
  }, {
    "id": "cb3c0325-5ffe-420e-82d8-969c2e6fdd5a",
    "name": "waits",
    "persistSession": false,
    "parallel": false,
    "timeout": 300,
    "tests": ["4aa9c6dc-bb9e-4765-9359-e9a66acefda8"]
  }, {
    "id": "4e8580a2-5621-444f-b528-b1eb0306e1ee",
    "name": "popups",
    "persistSession": false,
    "parallel": false,
    "timeout": 300,
    "tests": ["c720eabf-0c0a-4f6e-8aa6-9daca298d726", "4631cfbd-700c-42ea-add5-12e5a33d845e", "0d50f757-df05-4129-ab8b-ff52084c704d"]
  }],
  "urls": ["https://en.wikipedia.org/", "http://localhost:5000/"],
  "plugins": [],
  "version": "1.0",
  "code": {
    "suites": [{
      "name": "inputs",
      "persistSession": false,
      "code": "global.BASE_URL = configuration.baseUrl || 'http://nginx:80';let vars = {};jest.setTimeout(300000);describe(\"inputs\", () => {it(\"input editable\", async () => {await tests.input_editable(driver, vars);await driver.getTitle().then(title => {expect(title).toBeDefined();});});it(\"input type checkbox\", async () => {await tests.input_type_checkbox(driver, vars);await driver.getTitle().then(title => {expect(title).toBeDefined();});});it(\"input type text\", async () => {await tests.input_type_text(driver, vars);await driver.getTitle().then(title => {expect(title).toBeDefined();});});it(\"select\", async () => {await tests.select(driver, vars);await driver.getTitle().then(title => {expect(title).toBeDefined();});});});"
    }, {
      "name": "waits",
      "persistSession": false,
      "code": "global.BASE_URL = configuration.baseUrl || 'http://nginx:80';let vars = {};jest.setTimeout(300000);describe(\"waits\", () => {it(\"wait implicit\", async () => {await tests.wait_implicit(driver, vars);await driver.getTitle().then(title => {expect(title).toBeDefined();});});});"
    }, {
      "name": "popups",
      "persistSession": false,
      "code": "global.BASE_URL = configuration.baseUrl || 'http://nginx:80';let vars = {};jest.setTimeout(300000);describe(\"popups\", () => {it(\"popup alert\", async () => {await tests.popup_alert(driver, vars);await driver.getTitle().then(title => {expect(title).toBeDefined();});});it(\"popup confirmation\", async () => {await tests.popup_confirmation(driver, vars);await driver.getTitle().then(title => {expect(title).toBeDefined();});});it(\"popup prompt\", async () => {await tests.popup_prompt(driver, vars);await driver.getTitle().then(title => {expect(title).toBeDefined();});});});"
    }],
    "tests": [{
      "name": "input type text",
      "code": "tests.input_type_text = async function input_type_text(driver, vars) {await driver.get(BASE_URL + \"/value.html\");await driver.wait(until.elementLocated(By.id(`v`)), configuration.timeout);await expect(driver.findElement(By.id(`v`))).resolves.toHaveValue(`test`);await driver.wait(until.elementLocated(By.id(`v`)), configuration.timeout);await driver.findElement(By.id(`v`)).then(element => {element.clear().then(() => {element.sendKeys(`selenium`);});});await driver.wait(until.elementLocated(By.id(`v`)), configuration.timeout);await expect(driver.findElement(By.id(`v`))).resolves.toHaveValue(`selenium`);await driver.wait(until.elementLocated(By.id(`v`)), configuration.timeout);await driver.findElement(By.id(`v`)).then(element => {driver.actions().click(element).sendKeys(`-ide`).perform();});await driver.wait(until.elementLocated(By.id(`v`)), configuration.timeout);await expect(driver.findElement(By.id(`v`))).resolves.toHaveValue(`selenium-ide`);}"
    }, {
      "name": "input type checkbox",
      "code": "tests.input_type_checkbox = async function input_type_checkbox(driver, vars) {await driver.get(BASE_URL + \"/check.html\");await driver.wait(until.elementLocated(By.id(`t`)), configuration.timeout);await expect(driver.findElement(By.id(`t`))).resolves.toBeChecked();await driver.wait(until.elementLocated(By.id(`f`)), configuration.timeout);await expect(driver.findElement(By.id(`f`))).resolves.not.toBeChecked();await driver.wait(until.elementLocated(By.id(`f`)), configuration.timeout);await driver.findElement(By.id(`f`)).then(element => {driver.actions().click(element).perform();});await driver.wait(until.elementLocated(By.id(`f`)), configuration.timeout);await expect(driver.findElement(By.id(`f`))).resolves.toBeChecked();}"
    }, {
      "name": "input editable",
      "code": "tests.input_editable = async function input_editable(driver, vars) {await driver.get(BASE_URL + \"/editable.html\");await driver.wait(until.elementLocated(By.id(`d`)), configuration.timeout);await expect(driver.findElement(By.id(`d`))).resolves.not.toBeEditable();await driver.wait(until.elementLocated(By.id(`r`)), configuration.timeout);await expect(driver.findElement(By.id(`r`))).resolves.not.toBeEditable();await driver.wait(until.elementLocated(By.id(`e`)), configuration.timeout);await expect(driver.findElement(By.id(`e`))).resolves.toBeEditable();await driver.wait(until.elementLocated(By.id(`e`)), configuration.timeout);await driver.findElement(By.id(`e`)).then(element => {element.clear().then(() => {element.sendKeys(`selenium`);});});await driver.wait(until.elementLocated(By.id(`e`)), configuration.timeout);await expect(driver.findElement(By.id(`e`))).resolves.toHaveValue(`selenium`);}"
    }, {
      "name": "select",
      "code": "tests.select = async function select(driver, vars) {await driver.get(BASE_URL + \"/select.html\");await driver.wait(until.elementLocated(By.id(`select`)), configuration.timeout);await expect(driver.findElement(By.id(`select`))).resolves.toHaveSelectedValue(`1`);await driver.wait(until.elementLocated(By.id(`select`)), configuration.timeout);await driver.findElement(By.id(`select`)).then(element => {element.findElement(By.xpath(`//option[. = 'Two']`)).then(option => {option.click();});});await driver.wait(until.elementLocated(By.id(`select`)), configuration.timeout);await expect(driver.findElement(By.id(`select`))).resolves.toHaveSelectedValue(`2`);}"
    }, {
      "name": "wait implicit",
      "code": "tests.wait_implicit = async function wait_implicit(driver, vars) {await driver.get(BASE_URL + \"/wait/implicit.html\");await expect(driver.findElements(By.id(`t`))).resolves.not.toBePresent();await driver.wait(until.elementLocated(By.id(`b`)), configuration.timeout);await driver.findElement(By.id(`b`)).then(element => {driver.actions().click(element).perform();});await driver.wait(until.elementLocated(By.id(`t`)), configuration.timeout);await expect(driver.findElement(By.id(`t`))).resolves.toHaveText(`selenium`);}"
    }, {
      "name": "popup alert",
      "code": "tests.popup_alert = async function popup_alert(driver, vars) {await driver.get(BASE_URL + \"/popup/alert.html\");await driver.wait(until.elementLocated(By.id(`b`)), configuration.timeout);await driver.findElement(By.id(`b`)).then(element => {driver.actions().click(element).perform();});await driver.switchTo().alert().then(alert => {alert.getText().then(text => {expect(text).toBe(`test`);alert.accept();});});await driver.getTitle().then(title => {expect(title).toBe(`changed`);});}"
    }, {
      "name": "popup confirmation",
      "code": "tests.popup_confirmation = async function popup_confirmation(driver, vars) {await driver.get(BASE_URL + \"/popup/confirm.html\");await driver.wait(until.elementLocated(By.id(`b`)), configuration.timeout);await driver.findElement(By.id(`b`)).then(element => {driver.actions().click(element).perform();});await driver.switchTo().alert().then(alert => {alert.getText().then(text => {expect(text).toBe(`test`);});});await driver.switchTo().alert().then(alert => {alert.accept();});await driver.getTitle().then(title => {expect(title).toBe(`ok`);});await driver.wait(until.elementLocated(By.id(`b`)), configuration.timeout);await driver.findElement(By.id(`b`)).then(element => {driver.actions().click(element).perform();});await driver.switchTo().alert().then(alert => {alert.getText().then(text => {expect(text).toBe(`test`);});});await driver.switchTo().alert().then(alert => {alert.dismiss();});await driver.getTitle().then(title => {expect(title).toBe(`cancel`);});}"
    }, {
      "name": "popup prompt",
      "code": "tests.popup_prompt = async function popup_prompt(driver, vars) {await driver.get(BASE_URL + \"/popup/prompt.html\");await driver.wait(until.elementLocated(By.id(`b`)), configuration.timeout);await driver.findElement(By.id(`b`)).then(element => {driver.actions().click(element).perform();});await driver.switchTo().alert().then(alert => {alert.getText().then(text => {expect(text).toBe(`test`);});});await driver.switchTo().alert().then(alert => {alert.dismiss();});await driver.getTitle().then(title => {expect(title).toBe(`cancel`);});await driver.wait(until.elementLocated(By.id(`b`)), configuration.timeout);await driver.findElement(By.id(`b`)).then(element => {driver.actions().click(element).perform();});await driver.switchTo().alert().then(alert => {alert.getText().then(text => {expect(text).toBe(`test`);});});await driver.switchTo().alert().then(alert => {alert.sendKeys(``).then(() => {alert.accept();});});await driver.getTitle().then(title => {expect(title).toBe(`empty`);});await driver.wait(until.elementLocated(By.id(`b`)), configuration.timeout);await driver.findElement(By.id(`b`)).then(element => {driver.actions().click(element).perform();});await driver.switchTo().alert().then(alert => {alert.getText().then(text => {expect(text).toBe(`test`);});});await driver.switchTo().alert().then(alert => {alert.sendKeys(`selenium`).then(() => {alert.accept();});});await driver.getTitle().then(title => {expect(title).toBe(`selenium`);});}"
    }]
  },
  "dependencies": {}
}