name: 'Release'

on:
  push:
    branches: [trunk]

jobs:
  release:
    permissions:
      actions: read
      checks: read
      contents: write
      deployments: read
      id-token: read
      issues: read
      discussions: read
      packages: read
      pages: read
      pull-requests: read
      repository-projects: read
      security-events: read
      statuses: read
    runs-on: macos-11
    if: github.repository == 'seleniumhq/selenium-ide'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install pnpm
        run: npm i -g pnpm
      - name: Install dependencies
        run: pnpm -r i
      - name: Install chromedriver for windows
        run: npm_config_platform=win32 npm i
        working-directory: packages/selenium-ide/node_modules/electron-chromedriver
      - name: Build all JS
        run: pnpm run build
      - name: Publish non IDE packages to npm
        run: pnpm -r publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Install electron-builder dependencies
        run: npm install -g dmg-license
      - name: Build selenium-ide binaries
        run: pnpm run build:electron
      - name: Set env from current release
        run: >
          echo "SIDE_RELEASE_VERSION=$(node -pe "require('./package.json').version")" >> $GITHUB_ENV
        working-directory: ./packages/selenium-ide
      - name: Check env is there
        run: echo "${{ env.SIDE_RELEASE_VERSION }}"
      - name: Release latest selenium-ide on github
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GH_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Nightly (Unstable)"
          files: packages/selenium-ide/dist/Selenium*
      - name: Release selenium-ide on github
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GH_TOKEN }}"
          automatic_release_tag: "${{ env.SIDE_RELEASE_VERSION }}"
          prerelease: false
          files: packages/selenium-ide/dist/Selenium*
        continue-on-error: true
